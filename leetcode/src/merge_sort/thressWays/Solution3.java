package merge_sort.thressWays;

public class Solution3 {
/*
	3.      自然合并排序

	1)   基本思想：

	对于初始给定的数组a，通常存在多个长度大于1的已排好序的子数组段。因此用一次对a的线性扫描就可以找出所有这些排好序的子数组段，然后将相邻的排好序的子数组段两两合并

	2)   样例：

	若数组a中元素为{4,8,3,7,1,5,6,2}，则自然排好序的子数组段有{4,8}，{3,7}，{1,5,6}，{2}，经一次合并后得到2个合并后的子数组段{3,4,7,8}和{1,2,5,6}，继续合并相邻排好序的子数组段，直至整个数组已排好序，最终结果{1,2,3,4,5,6,7,8}
	
*/	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
